{"ast":null,"code":"var _jsxFileName = \"/Users/tmln/Desktop/ecommerce-premium-main/frontend/src/components/auth/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUser } from \"../../slices/authSlice\";\nimport { StyledForm } from \"./StyledForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const auth = useSelector(state => state.auth);\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    if (auth._id) {\n      navigate(\"/cart\");\n    }\n  }, [auth._id, navigate]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(user);\n    dispatch(registerUser(user));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledForm, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"name\",\n        onChange: e => setUser({ ...user,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"email\",\n        onChange: e => setUser({ ...user,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        onChange: e => setUser({ ...user,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: auth.rigisterStatus === \"pending\" ? \"Submitting...\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), auth.registerStatus === \"rejected\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: auth.registerError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"jeqlCD7AL1Zf4eVvNe2USdZkPiI=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/tmln/Desktop/ecommerce-premium-main/frontend/src/components/auth/Register.jsx"],"names":["useState","useEffect","useNavigate","useDispatch","useSelector","registerUser","StyledForm","Register","dispatch","navigate","auth","state","user","setUser","name","email","password","_id","handleSubmit","e","preventDefault","console","log","target","value","rigisterStatus","registerStatus","registerError"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AAEA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAC/Bc,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,QAAQ,EAAE;AAHqB,GAAD,CAAhC;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAI,CAACO,GAAT,EAAc;AACZR,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACC,IAAI,CAACO,GAAN,EAAWR,QAAX,CAJM,CAAT;;AAMA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAJ,IAAAA,QAAQ,CAACH,YAAY,CAACO,IAAD,CAAb,CAAR;AACD,GALD;;AAOA,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEM,YAAtB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,QAAQ,EAAGC,CAAD,IAAON,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWE,UAAAA,IAAI,EAAEK,CAAC,CAACI,MAAF,CAASC;AAA1B,SAAD;AAH1B;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,WAAW,EAAC,OAFd;AAGE,QAAA,QAAQ,EAAGL,CAAD,IAAON,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,UAAAA,KAAK,EAAEI,CAAC,CAACI,MAAF,CAASC;AAA3B,SAAD;AAH1B;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,QAAQ,EAAGL,CAAD,IAAON,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWI,UAAAA,QAAQ,EAAEG,CAAC,CAACI,MAAF,CAASC;AAA9B,SAAD;AAH1B;AAAA;AAAA;AAAA;AAAA,cAZF,eAiBE;AAAA,kBACGd,IAAI,CAACe,cAAL,KAAwB,SAAxB,GAAoC,eAApC,GAAsD;AADzD;AAAA;AAAA;AAAA;AAAA,cAjBF,EAoBGf,IAAI,CAACgB,cAAL,KAAwB,UAAxB,gBACC;AAAA,kBAAIhB,IAAI,CAACiB;AAAT;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IAtBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4BD,CApDD;;GAAMpB,Q;UACaJ,W,EACAD,W,EACJE,W;;;KAHTG,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUser } from \"../../slices/authSlice\";\nimport { StyledForm } from \"./StyledForm\";\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const auth = useSelector((state) => state.auth);\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  useEffect(() => {\n    if (auth._id) {\n      navigate(\"/cart\");\n    }\n  }, [auth._id, navigate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(user);\n    dispatch(registerUser(user));\n  };\n\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <h2>Register</h2>\n        <input\n          type=\"text\"\n          placeholder=\"name\"\n          onChange={(e) => setUser({ ...user, name: e.target.value })}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          onChange={(e) => setUser({ ...user, email: e.target.value })}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          onChange={(e) => setUser({ ...user, password: e.target.value })}\n        />\n        <button>\n          {auth.rigisterStatus === \"pending\" ? \"Submitting...\" : \"Register\"}\n        </button>\n        {auth.registerStatus === \"rejected\" ? (\n          <p>{auth.registerError}</p>\n        ) : null}\n      </StyledForm>\n    </>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}