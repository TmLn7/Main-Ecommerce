{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport jwtDecode from \"jwt-decode\";\nimport axios from \"axios\";\nimport { url, setHeaders } from \"./api\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  name: \"\",\n  email: \"\",\n  _id: \"\",\n  isAdmin: false,\n  registerStatus: \"\",\n  registerError: \"\",\n  loginStatus: \"\",\n  loginError: \"\",\n  userLoaded: false\n};\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async (values, {\n  rejectWithValue\n}) => {\n  try {\n    const token = await axios.post(`${url}/register`, {\n      name: values.name,\n      email: values.email,\n      password: values.password\n    });\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (error) {\n    console.log(error.response.data);\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (values, {\n  rejectWithValue\n}) => {\n  try {\n    const token = await axios.post(`${url}/login`, {\n      email: values.email,\n      password: values.password\n    });\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (error) {\n    console.log(error.response);\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const getUser = createAsyncThunk(\"auth/getUser\", async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const token = await axios.get(`${url}/user/${id}`, setHeaders());\n    localStorage.setItem(\"token\", token.data);\n    return token.data;\n  } catch (error) {\n    console.log(error.response);\n    return rejectWithValue(error.response.data);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loadUser(state, action) {\n      const token = state.token;\n\n      if (token) {\n        const user = jwtDecode(token);\n        return { ...state,\n          token,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          userLoaded: true\n        };\n      } else return { ...state,\n        userLoaded: true\n      };\n    },\n\n    logoutUser(state, action) {\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        token: \"\",\n        name: \"\",\n        email: \"\",\n        _id: \"\",\n        isAdmin: false,\n        registerStatus: \"\",\n        registerError: \"\",\n        loginStatus: \"\",\n        loginError: \"\"\n      };\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, (state, action) => {\n      return { ...state,\n        registerStatus: \"pending\"\n      };\n    });\n    builder.addCase(registerUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return { ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          registerStatus: \"success\"\n        };\n      } else return state;\n    });\n    builder.addCase(registerUser.rejected, (state, action) => {\n      return { ...state,\n        registerStatus: \"rejected\",\n        registerError: action.payload\n      };\n    });\n    builder.addCase(loginUser.pending, (state, action) => {\n      return { ...state,\n        loginStatus: \"pending\"\n      };\n    });\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return { ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          loginStatus: \"success\"\n        };\n      } else return state;\n    });\n    builder.addCase(loginUser.rejected, (state, action) => {\n      return { ...state,\n        loginStatus: \"rejected\",\n        loginError: action.payload\n      };\n    });\n    builder.addCase(getUser.pending, (state, action) => {\n      return { ...state,\n        getUserStatus: \"pending\"\n      };\n    });\n    builder.addCase(getUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return { ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          getUserStatus: \"success\"\n        };\n      } else return state;\n    });\n    builder.addCase(getUser.rejected, (state, action) => {\n      return { ...state,\n        getUserStatus: \"rejected\",\n        getUserError: action.payload\n      };\n    });\n  }\n});\nexport const {\n  loadUser,\n  logoutUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/tmln/Desktop/ecommerce-premium-main/frontend/src/slices/authSlice.js"],"names":["createSlice","createAsyncThunk","jwtDecode","axios","url","setHeaders","initialState","token","localStorage","getItem","name","email","_id","isAdmin","registerStatus","registerError","loginStatus","loginError","userLoaded","registerUser","values","rejectWithValue","post","password","setItem","data","error","console","log","response","loginUser","getUser","id","get","authSlice","reducers","loadUser","state","action","user","logoutUser","removeItem","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","getUserStatus","getUserError","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport jwtDecode from \"jwt-decode\";\nimport axios from \"axios\";\nimport { url, setHeaders } from \"./api\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  name: \"\",\n  email: \"\",\n  _id: \"\",\n  isAdmin: false,\n  registerStatus: \"\",\n  registerError: \"\",\n  loginStatus: \"\",\n  loginError: \"\",\n  userLoaded: false,\n};\n\nexport const registerUser = createAsyncThunk(\n  \"auth/registerUser\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const token = await axios.post(`${url}/register`, {\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      });\n\n      localStorage.setItem(\"token\", token.data);\n\n      return token.data;\n    } catch (error) {\n      console.log(error.response.data);\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const loginUser = createAsyncThunk(\n  \"auth/loginUser\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const token = await axios.post(`${url}/login`, {\n        email: values.email,\n        password: values.password,\n      });\n\n      localStorage.setItem(\"token\", token.data);\n      return token.data;\n    } catch (error) {\n      console.log(error.response);\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const getUser = createAsyncThunk(\n  \"auth/getUser\",\n  async (id, { rejectWithValue }) => {\n    try {\n      const token = await axios.get(`${url}/user/${id}`, setHeaders());\n\n      localStorage.setItem(\"token\", token.data);\n\n      return token.data;\n    } catch (error) {\n      console.log(error.response);\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loadUser(state, action) {\n      const token = state.token;\n\n      if (token) {\n        const user = jwtDecode(token);\n        return {\n          ...state,\n          token,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          userLoaded: true,\n        };\n      } else return { ...state, userLoaded: true };\n    },\n    logoutUser(state, action) {\n      localStorage.removeItem(\"token\");\n\n      return {\n        ...state,\n        token: \"\",\n        name: \"\",\n        email: \"\",\n        _id: \"\",\n        isAdmin: false,\n        registerStatus: \"\",\n        registerError: \"\",\n        loginStatus: \"\",\n        loginError: \"\",\n      };\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(registerUser.pending, (state, action) => {\n      return { ...state, registerStatus: \"pending\" };\n    });\n    builder.addCase(registerUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          registerStatus: \"success\",\n        };\n      } else return state;\n    });\n    builder.addCase(registerUser.rejected, (state, action) => {\n      return {\n        ...state,\n        registerStatus: \"rejected\",\n        registerError: action.payload,\n      };\n    });\n    builder.addCase(loginUser.pending, (state, action) => {\n      return { ...state, loginStatus: \"pending\" };\n    });\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          loginStatus: \"success\",\n        };\n      } else return state;\n    });\n    builder.addCase(loginUser.rejected, (state, action) => {\n      return {\n        ...state,\n        loginStatus: \"rejected\",\n        loginError: action.payload,\n      };\n    });\n    builder.addCase(getUser.pending, (state, action) => {\n      return {\n        ...state,\n        getUserStatus: \"pending\",\n      };\n    });\n    builder.addCase(getUser.fulfilled, (state, action) => {\n      if (action.payload) {\n        const user = jwtDecode(action.payload);\n        return {\n          ...state,\n          token: action.payload,\n          name: user.name,\n          email: user.email,\n          _id: user._id,\n          isAdmin: user.isAdmin,\n          getUserStatus: \"success\",\n        };\n      } else return state;\n    });\n    builder.addCase(getUser.rejected, (state, action) => {\n      return {\n        ...state,\n        getUserStatus: \"rejected\",\n        getUserError: action.payload,\n      };\n    });\n  },\n});\n\nexport const { loadUser, logoutUser } = authSlice.actions;\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}